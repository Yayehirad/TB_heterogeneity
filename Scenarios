#re-run the codes accorining to the scenario
#Scenario1 (beta1=15,CDR=0.75)
#Scenario2 (beta1=15,CDR=0.5)
#Scenario3 (beta=10,CDR=0.75)
#Scenario4 (beta=10,CDR=0.5)

library(deSolve)
library(reshape2)
library(ggplot2)
library(ggpubr)
threeIIC_model=function(current_timepoint, state_values, parameters)
{
  
  #creat state variables (local variables)
  S=state_values[1] #fully susceptible 
  L1=state_values[2] #early latency
  L2=state_values[3] #late latency
  I0=state_values[4] #infectious non-spreaders
  I1=state_values[5] #infectious spreaders
  I2=state_values[6] #infectious Super-spreaders
  
  
  with(
    as.list(parameters), #variable names within parameters can be used
    {
      #Intervention
      CDR_i_posibl=CDR_b+(1-CDR_b)*(q)#possible intervention size
      CDR_max=0.9#maximum possible CDR that the health system acan do
      CDR_i=min(CDR_i_posibl,CDR_max)#intervention CDR that can be used in model
      n=I0/(I0+I1+I2)
      l=I1/(I0+I1+I2)
      s=I2/(I0+I1+I2)
      cdr2_imax_possible=(CDR_i-(n+l)*CDR_b)/s#super-spreader CDR intervention 
      cdr2_imax=min(cdr2_imax_possible,CDR_max)#the limit that SS CDR can take
      
      cdr2_i=CDR_i+((cdr2_imax-CDR_i)*d)# Super-Spreaders CDR to be used in the model
      cdr1_i=(CDR_i-(s*cdr2_i))/(n+l)#low-spreaders CDR to be used in the model
      cdr0_i=cdr1_i#non-spreaders CDR
      
      # code for all CDRS channgins as cdr2 changes and this change deltas
      delta0=(cdr0_i*(gamma0+mui0+mu+h)/(1-cdr0_i))
      delta1=(cdr1_i*(gamma1+mui1+mu+j)/(1-cdr1_i))
      delta2=(cdr2_i*(gamma2+mui2+mu)/(1-cdr2_i))
      #compute derivative
      dS=(mu*N+mui0*I0+mui1*I1+mui2*I2)+
        (delta0*I0+delta1*I1+delta2*I2)-
        ((beta0*I0+beta1*I1+beta2*I2)/N)*S-mu*S
      dL1=((beta0*I0+beta1*I1+beta2*I2)/N)*S+(r*(beta0*I0+beta1*I1+beta2*I2)/N)*L2-
        (epsilon0+epsilon1+epsilon2+mu+kappa)*L1
      dL2=kappa*L1+(gamma0*I0+gamma1*I1+gamma2*I2)-
        (r*(beta0*I0+beta1*I1+beta2*I2)/N)*L2-(nu0+nu1+nu2+mu)*L2
      dI0=(epsilon0*L1+nu0*L2)-(mui0+mu+gamma0+delta0+h)*I0
      dI1=(epsilon1*L1+nu1*L2+h*I0)-(mui1+mu+gamma1+delta1+j)*I1
      dI2=(epsilon2*L1+nu2*L2+j*I1)-(mui2+mu+gamma2+delta2)*I2
      
      dinc=(epsilon0*L1+nu0*L2)+(epsilon1*L1+nu1*L2)+(epsilon2*L1+nu2*L2)
      
      #combine results
      results=c(dS, dL1, dL2, dI0,dI1,dI2, dinc)
      list(results)
    }
  )
}
# Set parameters 
N=1
#a=0.58#0.54-0.61, mean =0.58  proportion of non-spreaders
#alpha=0.82#0.71-0.90, mean 0.82 proportion of low-spreaders among infectious

Pinf=0.42# 0.39-0.46 mean 0.42 prop of infectious TB
Pss=0.18 # 0.1-0.29 mean 0.18 proportion of ss among infectious

c=Pinf*Pss#min=Pinf_min*Pss_min,max= Pinf_max*pss_max, proportion of ss among all TB
b=Pinf*(1-Pss)#min=Pinf_min(1-Pss_max),max=Pinf_max(1-Pss_min)#proportion of LS among all TB
a=1-Pinf #proportion of non-spreaders among all TB

m=4.67#3.69-5.88 mean 4.67	
beta0<-0
beta1<-15# 10- 15 mean 12, event rate per low-spreaders
#baseline CDR 
CDR_b=0.75#min=0.5,max=0.75
beta2<-beta1*m #event rate per super-spreaders
r=0.21 #probability of geting reinction relative to susceptible individuals
Time_L1=0.25#time in L1 min = 0.167, max = 1,  mean 1/4
Time_I=3# 2-4 mean 3 duration of infectiousness
mu= 1/65#min = 1/55, max = 1/75 mean 1/65
total_outflows_I=(1/Time_I)-mu

epsilon=0.4016#0.296-0.512, 0.4016 # M mean=0.0826,(min=0.06195,max= 0.10325)
kappa=(1/Time_L1)-(epsilon) # kappa=3.625#(1/Time_L1)-(epsilon)
nu=0.00195 #0.0009-0.00385, 0.00195  ##M mean=0.000594,(min=0.0004455,max= 0.0007425)

P_mui0=0.077#min = 0.05, max = 0.096, 0.077
P_mui1=0.077#min = 0.05, max = 0.096, 0.077
P_mui2=0.534#min = 0.327, max = 0.787 , 0.534

P_h=0#min = 0.0, max = 0.058, 0.045
P_j=0#min = 0.0, max = 0.058   0.045

mui0=P_mui0*(total_outflows_I)
mui1=P_mui1*(total_outflows_I)
mui2=P_mui2*(total_outflows_I)

h=P_h*(total_outflows_I)
j=P_j*(total_outflows_I)

epsilon0=epsilon*a
epsilon1=epsilon*b
epsilon2=epsilon*c

nu0=nu*a
nu1=nu*b
nu2=nu*c

#gamma
gamma0=(total_outflows_I)-(mui0+h)
gamma1=(total_outflows_I)-(mui1+j)
gamma2=(total_outflows_I)-(mui2)

#baeseline scenario
#Baseline no intervention
d=0
q=0
#mass intervention
q=0.2
#targeted intervention
d=0
d=0.1
d=0.2
d=0.3
d=0.4
d=0.5
d=0.6
d=0.7
d=0.8
d=0.9
d=1

##Initial values for sub population: 
A=1 #Fully susceptible hosts
B=0        #Early latent hosts
C=0        #Late latent hosts
D=1e-6*a    #active TB hosts proportion of extrapulmonary 15% of all infectious 
E=1e-6*b # active TB Normal spreaders
F=1e-6*c # active TB Super-spreader 10% of TB patients are super-spreaders
G=0 # diagnosed 

parameter_list=c(N=N,mu=mu,beta0=beta0, beta1=beta1, beta2=beta2,epsilon0=epsilon0,epsilon1=epsilon1,epsilon2=epsilon2, 
                 kappa=kappa,gamma0=gamma0,gamma1=gamma1,gamma2=gamma2,nu0=nu0,nu1=nu1,nu2=nu2, 
                 mui0=mui0,mui1=mui1,mui2=mui2,delta0=delta0,delta1=delta1,delta2=delta2,r=r,
                 h=h,j=j)  

#Initial state values for differential equasions
initial_values=c(S=A-(D+E+F), L1=B, L2=C, I0=D,I1=E,I2=F,inc=D+E+F)

## Output Time points
times=seq(0, 5000, by = 1)
#equi
Sena_outputEq=as.data.frame(lsoda(initial_values, times, threeIIC_model, parameter_list))
Nq=Sena_outputEq$S+Sena_outputEq$L1+Sena_outputEq$L2+Sena_outputEq$I0+
  Sena_outputEq$I1+Sena_outputEq$I2
plot(Nq,ylim=c(0,1))

incidence=(diff(Sena_outputEq$inc)/Nq)*100000
plot(incidence)
max(incidence)

S_eq=Sena_outputEq$S[length(Sena_outputEq$S)]
L1_eq=Sena_outputEq$L1[length(Sena_outputEq$L1)]
L2_eq=Sena_outputEq$L2[length(Sena_outputEq$L2)]
I0_eq=Sena_outputEq$I0[length(Sena_outputEq$I0)]
I1_eq=Sena_outputEq$I1[length(Sena_outputEq$I1)]
I2_eq=Sena_outputEq$I2[length(Sena_outputEq$I2)]
#Intervention
initial_values=c(S=  S_eq, L1=L1_eq, L2=  L2_eq, I0= I0_eq,I1= I1_eq,I2= I2_eq,inc= I0_eq+I1_eq+ I2_eq)#done
s3ICoutput=as.data.frame(lsoda(initial_values, times, threeIIC_model, parameter_list))
#View(soutput)
### fill vectors with results
s3ICvS=s3ICoutput$S
s3ICvL1=s3ICoutput$L1
s3ICvL2=s3ICoutput$L2
s3ICvI0=s3ICoutput$I0
s3ICvI1=s3ICoutput$I1
s3ICvI2=s3ICoutput$I2
s3ICvtime=s3ICoutput$time
s3ICvinc=s3ICoutput$inc




#try
Baseline_Incidence=(diff(s3ICvinc)/Nq)*100000
max(Baseline_Incidence)
plot(Baseline_Incidence)

Baseline1_Incidence=(diff(s3ICvinc)/Nq)*100000
d_0=(diff(s3ICvinc)/Nq)*100000
d_0.1=(diff(s3ICvinc)/Nq)*100000
d_0.2=(diff(s3ICvinc)/Nq)*100000
d_0.3=(diff(s3ICvinc)/Nq)*100000
d_0.4=(diff(s3ICvinc)/Nq)*100000
d_0.5=(diff(s3ICvinc)/Nq)*100000
d_0.6=(diff(s3ICvinc)/Nq)*100000
d_0.7=(diff(s3ICvinc)/Nq)*100000
d_0.8=(diff(s3ICvinc)/Nq)*100000
d_0.9=(diff(s3ICvinc)/Nq)*100000
d_1=(diff(s3ICvinc)/Nq)*100000
#same CDR increase 5%
Scenario<-cbind(s3ICvtime,Baseline1_Incidence,d_0,d_0.1,d_0.2,d_0.3,d_0.4,d_0.5,d_0.6,
                   d_0.7,d_0.8,d_0.9,d_1)
View(Scenario)
write.csv(x=Scenario,file = '..//heterogeneity/output/Scenario.csv')



#plot
cbp2<-c("#000000","#F8766D","#DB8E00","#AEA200","#64B200","#00BD5C",
        "#00C1A7","#00BADE","#00A6FF","#B385FF","#EF67EB","#FF63B6")
#1
Scenario1=read.csv(file.choose(),header=T)
m_Sc1jt=melt(Scenario1,id='Time')
g_Sc1jt<-ggplot(m_Sc1jt,aes(x=Time,y=value,colour=variable))+
  geom_line(size=1.3)+
  xlim(0,20)+
  ylim(0,450)+
  ylab("")+
  xlab("Time in years")+
  ggtitle("A")+
  theme_bw()+
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
  legend.title = element_blank())
    
p1<-g_Sc1jt+scale_colour_manual(values = cbp2)
#2
Scenario2=read.csv(file.choose(),header=T)
m_Sc2jt=melt(Scenario2,id='Time')
g_Sc2jt<-ggplot(m_Sc2jt,aes(x=Time,y=value,colour=variable))+
  geom_line(size=1.3)+
  xlim(0,20)+
  ylim(0,450)+
  ylab("")+
  xlab("Time in years")+
  ggtitle("B")+
  theme_bw()+
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
        legend.title = element_blank())
p2<-g_Sc2jt+scale_colour_manual(values = cbp2)
#3
Scenario3=read.csv(file.choose(),header=T)
m_Sc3jt=melt(Scenario3,id='Time')
g_Sc3jt<-ggplot(m_Sc3jt,aes(x=Time,y=value,colour=variable))+
  geom_line(size=1.3)+
  xlim(0,20)+
  ylim(0,450)+
  ylab("")+
  xlab("Time in years")+
  ggtitle("C")+
  theme_bw()+
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
        legend.title = element_blank())
g_Sc3jt
p3<-g_Sc3jt+scale_colour_manual(values = cbp2)

#4
Scenario4=read.csv(file.choose(),header=T)
m_Sc4jt=melt(Scenario4,id='Time')
g_Sc4jt<-ggplot(m_Sc4jt,aes(x=Time,y=value,colour=variable))+
  geom_line(size=1.3)+
  xlim(0,20)+
  ylim(0,450)+
  ylab("")+
  xlab("Time in years")+
  ggtitle("D")+
  theme_bw()+
  theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
        legend.title = element_blank())
g_Sc4jt

p4<-g_Sc4jt+scale_colour_manual(values = cbp2)

F0jt<-ggarrange( p1,p2,p3,p4,ncol=2, nrow=2, 
                 common.legend = TRUE, legend="right")
annotate_figure(F0jt,left = text_grob("Incidence per 100,000 population",size=12,rot = 90))










