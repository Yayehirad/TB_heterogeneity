#high and low value of parameters, mannualy save incidence at each run
#one way sensitivity of intervention to params value
library(deSolve)
library(reshape2)
library(ggplot2)
library(ggpubr)
require(lhs)
library(sensitivity)
#SENSITIVITY ANALYSIS
#Model Func

Baseline_model=function(current_timepoint, state_values, parameters)
{
  #creat state variables (local variables)
  S=state_values[1] #fully susceptible 
  L1=state_values[2] #early latency
  L2=state_values[3] #late latency
  I0=state_values[4] #infectious non-spreaders
  I1=state_values[5] #infectious spreaders
  I2=state_values[6] #infectious Super-spreaders
  
  
  with(
    as.list(parameters), #variable names within parameters can be used
    {
      #compute derivative
      dS=(mu*N+mui0*I0+mui1*I1+mui2*I2)+
        (delta0_b*I0+delta1_b*I1+delta2_b*I2)-
        ((beta0*I0+beta1*I1+beta2*I2)/N)*S-mu*S
      dL1=((beta0*I0+beta1*I1+beta2*I2)/N)*S+
        (r*(beta0*I0+beta1*I1+beta2*I2)/N)*L2-
        (epsilon0+epsilon1+epsilon2+mu+kappa)*L1
      dL2=kappa*L1+(gamma0*I0+gamma1*I1+gamma2*I2)-
        (r*(beta0*I0+beta1*I1+beta2*I2)/N)*L2-(nu0+nu1+nu2+mu)*L2
      dI0=(epsilon0*L1+nu0*L2)-(mui0+mu+gamma0+delta0_b+h)*I0
      dI1=(epsilon1*L1+nu1*L2+h*I0)-(mui1+mu+gamma1+delta1_b+j)*I1
      dI2=(epsilon2*L1+nu2*L2+j*I1)-(mui2+mu+gamma2+delta2_b)*I2
      
      dinc=(epsilon0*L1+nu0*L2)+(epsilon1*L1+nu1*L2)+(epsilon2*L1+nu2*L2)
      
      #combine results
      results=c(dS, dL1, dL2, dI0,dI1,dI2, dinc)
      list(results)
    }
  )
}

#Intervention model

intervention_model=function(current_timepoint, state_values, parameters)
{
  
  S=state_values[1] #fully susceptible 
  L1=state_values[2] #early latency
  L2=state_values[3] #late latency
  I0=state_values[4] #infectious non-spreaders
  I1=state_values[5] #infectious spreaders
  I2=state_values[6] #infectious Super-spreaders
  
  #creat state variables (local variables)
  

  with(
    as.list(parameters), #variable names within parameters can be used
    {
      #compute derivative
      dS=(mu*N+mui0*I0+mui1*I1+mui2*I2)+(delta0_i*I0+delta1_i*I1+delta2_i*I2)-
        ((beta0*I0+beta1*I1+beta2*I2)/N)*S-mu*S
      dL1=((beta0*I0+beta1*I1+beta2*I2)/N)*S+(r*(beta0*I0+beta1*I1+beta2*I2)/N)*L2-
        (epsilon0+epsilon1+epsilon2+mu+kappa)*L1
      dL2=kappa*L1+(gamma0*I0+gamma1*I1+gamma2*I2)-
        (r*(beta0*I0+beta1*I1+beta2*I2)/N)*L2-(nu0+nu1+nu2+mu)*L2
      dI0=(epsilon0*L1+nu0*L2)-(mui0+mu+gamma0+delta0_i+h)*I0
      dI1=(epsilon1*L1+nu1*L2+h*I0)-(mui1+mu+gamma1+delta1_i+j)*I1
      dI2=(epsilon2*L1+nu2*L2+j*I1)-(mui2+mu+gamma2+delta2_i)*I2
      
      dinc=(epsilon0*L1+nu0*L2)+(epsilon1*L1+nu1*L2)+(epsilon2*L1+nu2*L2)
      
      
      #intervention strategy
      CDR_i_posibl=cdr_b+(1-cdr_b)*(q)#possible intervention size
      CDR_max=0.9#maximum possible CDR that the health system acan do
      CDR_i=min(CDR_i_posibl,CDR_max)#intervention CDR that can be used in model
      n=I0/(I0+I1+I2)
      l=I1/(I0+I1+I2)
      s=I2/(I0+I1+I2)
      cdr2_imax_possible=(CDR_i-(n+l)*cdr_b)/s#super-spreader CDR intervention 
      cdr2_imax=min(cdr2_imax_possible,CDR_max)#the limit that SS CDR can take
      
      cdr2_i=CDR_i+((cdr2_imax-CDR_i)*d)# Super-Spreaders CDR to be used in the model
      cdr1_i=(CDR_i-(s*cdr2_i))/(n+l)#low-spreaders CDR to be used in the model
      cdr0_i=cdr1_i#non-spreaders CDR
      
      #compute deltas for the BIntervention_model
      delta0_i=(cdr0_i*(gamma0+mui0+mu+h)/(1-cdr0_i))
      delta1_i=(cdr1_i*(gamma1+mui1+mu+j)/(1-cdr1_i))
      delta2_i=(cdr2_i*(gamma2+mui2+mu)/(1-cdr2_i))
      
      #combine results
      
      results=c(dS, dL1, dL2, dI0,dI1,dI2, dinc)
      list(results)
    }
  )
}

N=1
Pinf=0.42#min=0.22, max=0.62, 0.42, proportion of infectious
Pss=0.2619#min=0.11,max=0.33,0.2619,proportion of superspreaders among infectious
c=Pinf*Pss#min=Pinf_min*Pss_min,max= Pinf_max*pss_max, proportion of ss among all TB
b=Pinf*(1-Pss)#min=Pinf_min(1-Pss_max),max=Pinf_max(1-Pss_min)#proportion of LS among all TB
a=1-Pinf #proportion of non-spreaders among all TB

alpha=0.22#min=0.12, max= 0.32,0.22
r=0.21
Time_L1=1/4#time in L1 min = 0.167, max = 1,1/4
Time_L2=20#time in L2
Time_I=3#time in I
mu= 1/65#min = 1/55, max = 1/75
total_outflows_I=(1/Time_I)-mu
beta0<-0
beta2<-45#min = 40, 45, max = 60
P_epsilon=0.1004#min = 0.074, max = 0.128, 0.1004
P_nu=0.039#min = 0.018, max = 0.077, 0.039
P_mui0=0.077#min = 0.05, max = 0.096, 0.077
P_mui1= 0.077#min = 0.05, max = 0.096, 0.077
P_mui2= 0.534#min = 0.327, max = 0.787 , 0.534
P_h=0.045#min = 0.0, max = 0.058, 0.045
P_j=0.045#min = 0.0, max = 0.058
#baseline CDR 
cdr_b=0.65#min=0.5,max=0.75
beta1<-beta2*alpha
epsilon=P_epsilon*(1/Time_L1)
epsilon0=epsilon*a
epsilon1=epsilon*b
epsilon2=epsilon*c
kappa=(1/Time_L1)-(epsilon) 
nu=P_nu*(1/Time_L2)
nu0=nu*a
nu1=nu*b
nu2=nu*c

mui0=P_mui0*(total_outflows_I)
mui1=P_mui1*(total_outflows_I)
mui2=P_mui2*(total_outflows_I)

h=P_h*(total_outflows_I)
j=P_j*(total_outflows_I)
#gamma
gamma0=(total_outflows_I)-(mui0)
gamma1=(total_outflows_I)-(mui1)
gamma2=(total_outflows_I)-(mui2)
#compute baseline delta
delta0_b=(cdr_b*(gamma0+mui0+mu+h)/(1-cdr_b))
delta1_b=(cdr_b*(gamma1+mui1+mu+j)/(1-cdr_b))
delta2_b=(cdr_b*(gamma2+mui2+mu)/(1-cdr_b))
####Intervention
q=0.1
d=0.8
###


parameter_listb=c(N=N,mu=mu,beta0=beta0, beta1=beta1, beta2=beta2,epsilon0=epsilon0,epsilon1=epsilon1,epsilon2=epsilon2, 
                 kappa=kappa,gamma0=gamma0,gamma1=gamma1,gamma2=gamma2,nu0=nu0,nu1=nu1,nu2=nu2, 
                 mui0=mui0,mui1=mui1,mui2=mui2,delta0_b=delta0_b,delta1_b=delta1_b,delta2_b=delta2_b,r=r,
                 h=h,j=j) 
parameter_listI=c(N=N,mu=mu,beta0=beta0, beta1=beta1, beta2=beta2,epsilon0=epsilon0,epsilon1=epsilon1,epsilon2=epsilon2, 
                  kappa=kappa,gamma0=gamma0,gamma1=gamma1,gamma2=gamma2,nu0=nu0,nu1=nu1,nu2=nu2, 
                  mui0=mui0,mui1=mui1,mui2=mui2,delta0_b=delta0_i,delta1_b=delta1_i,delta2_b=delta2_i,r=r,
                  h=h,j=j) 
##Initial values for sub population: 
A=1 #Fully susceptible hosts
B=0        #Early latent hosts
C=0        #Late latent hosts
D=1e-6*0.58    #active TB hosts proportion of extrapulmonary 15% of all infectious 
E=1e-6*0.31 # active TB Normal spreaders
F=1e-6*0.11 # active TB Super-spreader 10% of TB patients are super-spreaders
G=0 # diagnosed 

initial_values=c(S=A-(D+E+F), L1=B, L2=C, I0=D,I1=E,I2=F,inc=D+E+F)

  #RUN Baseline Model
  initial_values=c(S=A-(D+E+F), L1=B, L2=C, I0=D,I1=E,I2=F,inc=D+E+F)
  times=seq(0, 2000, by = 1)
  B_out <- as.data.frame(lsoda(initial_values, times, Baseline_model, parameter_listb))
  
  Nq=B_out$S+B_out$L1+B_out$L2+B_out$I0+B_out$I1+B_out$I2
  incidence_B_out=(diff(B_out$inc)/Nq)*100000
  
  ChangeI=abs(incidence_B_out[length(incidence_B_out)-1]-
                incidence_B_out[length(incidence_B_out)-2])
  
  max_iter = 100
  n_iter = 0
  while( ChangeI>1.0e-6 && n_iter<max_iter){
    n_iter = n_iter + 1
    initial_values=c(S=min(B_out$S),L1=max(B_out$L1),L2=max(B_out$L2),I0=max(B_out$I0),I1=max(B_out$I1),
                     I2=max(B_out$I2),inc=max(B_out$I0)+max(B_out$I1)+max(B_out$I2))
    times=seq(0, 2000, by = 1)
    B_out <- as.data.frame(lsoda(initial_values, times, Baseline_model, parameter_listb))
    
    Nq=B_out$S+B_out$L1+B_out$L2+B_out$I0+B_out$I1+B_out$I2
    incidence_B_out=(diff(B_out$inc)/Nq)*100000
    ChangeI=abs(incidence_B_out[length(incidence_B_out)-1]-
                  incidence_B_out[length(incidence_B_out)-2])
  }
  
 
  
  B_Incidence_time_n = incidence_B_out[length(incidence_B_out)-1] #the model reaches equilibrium at time around 500
  print("baseline")
  print(B_Incidence_time_n)
  
  #record compartment values at equilibrium
  Equi_initial_values=c(S=B_out$S[length(B_out$S)], L1=B_out$L1[length(B_out$L1)], L2=B_out$L2[length(B_out$L2)], I0=B_out$I0[length(B_out$I0)],I1=B_out$I1[length(B_out$I1)],I2=B_out$I2[length(B_out$I2)],inc=B_out$I0[length(B_out$I0)]+B_out$I1[length(B_out$I1)]+B_out$I2[length(B_out$I2)])
  
  #RUN Intervention model, 
  Int_out <- as.data.frame(lsoda(Equi_initial_values, times, intervention_model, parameter_listI))
  
  Nq=Int_out$S+Int_out$L1+Int_out$L2+Int_out$I0+Int_out$I1+Int_out$I2
  Int_incidence_out=(diff(Int_out$inc)/Nq)*100000
  plot(Int_incidence_out,ylim=c(0,200))
  #considering a 20 years impact of intervention
  Int_Incidence_time_n = Int_incidence_out[20]
 print("Intervention")
  print(Int_Incidence_time_n)
  #calculate the difference between baseline incidence and intervention incidence
  Change_inc=B_Incidence_time_n-Int_Incidence_time_n 
  print("change")
  print(Change_inc)
  Relative_inc=((B_Incidence_time_n-Int_Incidence_time_n)/B_Incidence_time_n)*100
 print("relative")
 print(Relative_inc)


















